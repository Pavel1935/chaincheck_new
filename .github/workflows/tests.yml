name: Smoke tests  # –ò–º—è workflow (–≤–∏–¥–Ω–æ –≤ Actions)

on:
  push:
    branches: [ main ]           # –ó–∞–ø—É—Å–∫ –ø—Ä–∏ –ø—É—à–∞—Ö –≤ main
  pull_request:
  schedule:
    - cron: "0 5 * * *"          # –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é: 05:00 UTC (08:00 –ú–°–ö)

jobs:
  smoke:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright/python:v1.55.0-jammy
      options: --ipc=host --shm-size=1g

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      # 1Ô∏è‚É£ –ó–∞–±–∏—Ä–∞–µ–º –∫–æ–¥
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ –°—Ç–∞–≤–∏–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (pytest + allure)
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install "pytest<8.3.0" "allure-pytest>=2.13.2"

      # 3Ô∏è‚É£ –°—Ç–∞–≤–∏–º Allure CLI –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ HTML
      - name: Install Allure CLI
        run: |
          apt-get update
          apt-get install -y default-jre wget unzip
          ALLURE_VERSION=2.29.0
          wget -q https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip -O /tmp/allure.zip
          unzip -q /tmp/allure.zip -d /opt/
          ln -sf /opt/allure-${ALLURE_VERSION}/bin/allure /usr/bin/allure
          allure --version

      # 4Ô∏è‚É£ –ß–∏—Å—Ç–∏–º –ø–∞–ø–∫—É allure-results
      - name: Prepare allure-results
        run: rm -rf allure-results && mkdir -p allure-results

      # 5Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
      - name: Add Allure metadata
        run: |
          mkdir -p allure-results
          cat > allure-results/executor.json <<'EOF'
          {
            "name": "GitHub Actions",
            "type": "github",
            "reportName": "Smoke tests",
            "buildName": "${{ github.workflow }} #${{ github.run_number }}",
            "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "environment": "${{ github.ref_name }}"
          }
          EOF
          echo "branch=${{ github.ref_name }}" >> allure-results/environment.properties
          echo "runner=ubuntu-latest" >> allure-results/environment.properties

      # 6Ô∏è‚É£ –ó–∞–ø—É—Å–∫ API smoke —Ç–µ—Å—Ç–æ–≤
      - name: Run API smoke tests
        run: |
          pytest -m "smoke and api" -vv -ra \
                 --alluredir=allure-results \
                 --clean-alluredir

      # 7Ô∏è‚É£ –ü–∞—É–∑–∞ 3 –º–∏–Ω—É—Ç—ã (–∫–∞–ø—á–∞)
      - name: Wait before UI tests
        run: sleep 180

      # 8Ô∏è‚É£ –ó–∞–ø—É—Å–∫ UI smoke —Ç–µ—Å—Ç–æ–≤
      - name: Run UI smoke tests
        run: |
          pytest -m "smoke and ui" -vv -ra \
                 --alluredir=allure-results

      # 9Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ allure-results
      - name: Check allure-results content
        if: always()
        run: |
          echo "Checking allure-results folder:"
          ls -la allure-results || echo "‚ùå No allure-results directory found"

      # üîü –ó–∞–≥—Ä—É–∂–∞–µ–º "—Å—ã—Ä—ã–µ" —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      - name: Upload Allure results (raw)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          if-no-files-found: warn

      # 1Ô∏è‚É£1Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á—ë—Ç–∞
      - name: Generate Allure HTML report
        if: always()
        run: |
          export ALLURE_BASE_URL="/${GITHUB_REPOSITORY#*/}/"
          allure generate allure-results -o allure-report --clean
          ls -la allure-report | head -n 30

      # 1Ô∏è‚É£2Ô∏è‚É£ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –Ω–∞ GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always() && github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          force_orphan: true

      # 1Ô∏è‚É£3Ô∏è‚É£ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ PR —Å–æ —Å—Å—ã–ª–∫–æ–π
      - name: Comment report URL
        if: always()
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: smoke-report
          message: "‚úÖ Allure report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
