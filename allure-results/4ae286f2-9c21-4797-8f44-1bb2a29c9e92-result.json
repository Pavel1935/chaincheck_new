{"name": "test_aml_check_smoke_bsc_ok", "status": "failed", "statusDetails": {"message": "AssertionError: /aml/check/history/one failed: {'ok': 0, 'error': 'REPORT_NOT_FOUND'}\nassert 0 == 1\n +  where 0 = <built-in method get of dict object at 0x1124c2a40>('ok')\n +    where <built-in method get of dict object at 0x1124c2a40> = {'error': 'REPORT_NOT_FOUND', 'ok': 0}.get", "trace": "self = <tests.test_smoke_api_with_log_info.TestAMLCheckSmoke object at 0x1123e74d0>\ntokens = {'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhbWwtYmFja2VuZC1nYXRld2F5Iiwic3ViIjoiMDE5MDEwYjQtYTV...zZXJfcm9sZSI6M30.rYif8LQRhMwxxdt3Xhxlc_UupFrSd-iXhn3Nb0ycdm0', 'refresh_token': '0198c212-7b82-77c4-8be1-fe5642ef04e6'}\n\n    @pytest.mark.smoke\n    def test_aml_check_smoke_bsc_ok(self, tokens):\n        headers = {'Authorization': f'Bearer {tokens[\"access_token\"]}'}\n        url = f\"{BASE}/aml/check\"\n    \n        payload = {\n            \"wallet\": \"0x1EDbA89FF829c4DF84b15F1D9Dd75DC9a5582F2b\",\n            \"network\": \"bsc\"\n        }\n    \n        log.info(\"POST %s — запуск AML-проверки (BSC)\", url)\n        log.debug(\"Payload: %s\", payload)\n    \n        t0 = time.time()\n        response = requests.post(url, headers=headers, json=payload, timeout=10)\n        dt = (time.time() - t0) * 1000\n        log.info(\"Response %s %s, %.0f ms\", url, response.status_code, dt)\n    \n        data = response.json()\n        assert data.get(\"ok\") == 1, f\"/aml/check failed: {data}\"\n        report_id = data[\"result\"][\"report_id\"]\n        log.info(\"Получен report_id=%s\", report_id)\n    \n        time.sleep(1)\n        url_history = f\"{BASE}/aml/check/history/one\"\n        log.info(\"POST %s — получение результата по report_id=%s\", url_history, report_id)\n    \n        response2 = requests.post(url_history, headers=headers, json={\"report_id\": report_id}, timeout=10)\n        log.info(\"Response %s %s\", url_history, response2.status_code)\n    \n        data2 = response2.json()\n>       assert data2.get(\"ok\") == 1, f\"/aml/check/history/one failed: {data2}\"\nE       AssertionError: /aml/check/history/one failed: {'ok': 0, 'error': 'REPORT_NOT_FOUND'}\nE       assert 0 == 1\nE        +  where 0 = <built-in method get of dict object at 0x1124c2a40>('ok')\nE        +    where <built-in method get of dict object at 0x1124c2a40> = {'error': 'REPORT_NOT_FOUND', 'ok': 0}.get\n\ntests/test_smoke_api_with_log_info.py:86: AssertionError"}, "attachments": [{"name": "log", "source": "979b10be-fc98-4c67-bd49-a4fe7431113c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "670d2e16-1a9f-483b-a854-d1172c416caf-attachment.txt", "type": "text/plain"}], "start": 1755520071555, "stop": 1755520075009, "uuid": "e233f950-c096-441a-8b7e-fd7c3a7c372e", "historyId": "d37a63558d4bef561dbf3656212a725e", "testCaseId": "d37a63558d4bef561dbf3656212a725e", "fullName": "tests.test_smoke_api_with_log_info.TestAMLCheckSmoke#test_aml_check_smoke_bsc_ok", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_smoke_api_with_log_info"}, {"name": "subSuite", "value": "TestAMLCheckSmoke"}, {"name": "host", "value": "MacBook-Pro-Mihail.local"}, {"name": "thread", "value": "5843-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_smoke_api_with_log_info"}], "titlePath": ["tests", "test_smoke_api_with_log_info.py", "TestAMLCheckSmoke"]}